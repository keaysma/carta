{"version":3,"sources":["firebase.js","Toolbar.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","provider","auth","GoogleAuthProvider","Toolbar","callback","settings","id","className","onClick","icon","faSwatchbook","faShapes","gridMode","faBorderAll","faBorderNone","faHandSparkles","App","useState","color","setSettings","containerRef","useRef","stage","setStage","setUsers","user","setUser","useEffect","onAuthStateChanged","userObj","database","ref","on","snapshot","users","val","newState","userId","items","item","push","uid","title","Konva","Stage","container","width","current","clientWidth","height","clientHeight","itemsRef","get","then","syncCanvas","newObjects","layer","Layer","x","y","circle","Circle","radius","fill","stroke","strokeWidth","draggable","add","e","pos","target","getPosition","console","log","update","off","evt","shiftKey","layerX","layerY","destroyChildren","draw","window","addEventListener","size","src","photoURL","signOut","signInWithPopup","result","userRes","state","remove","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f26373d.chunk.js","sourcesContent":["// src/firebase.js\nimport firebase from 'firebase'\nif(!firebase.apps.length)\n    firebase.initializeApp({\n        apiKey: \"AIzaSyA8S-srH-tHf8zNFjm-K8wExlaxY0xEn0Q\",\n        authDomain: \"carta-engine.firebaseapp.com\",\n        projectId: \"carta-engine\",\n        storageBucket: \"carta-engine.appspot.com\",\n        messagingSenderId: \"129718650492\",\n        appId: \"1:129718650492:web:6a0311a65b93ebbef36bf9\",\n        measurementId: \"G-T9VZHWB6KX\"\n    })\n\nexport const provider = new firebase.auth.GoogleAuthProvider()\nexport const auth = firebase.auth()\nexport default firebase","import React, { useState, useEffect, useRef, } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBorderAll, faBorderNone, faHandSparkles, faSwatchbook, faShapes } from '@fortawesome/free-solid-svg-icons'\nimport './Toolbar.css'\n\nconst Toolbar = ({ callback, settings }) => {\n    return (\n        <div id=\"toolbar\">\n            <div className=\"item\" onClick={() => callback('color')}>\n                <FontAwesomeIcon icon={faSwatchbook} className=\"light-icon\"/>\n            </div>\n            <div className=\"item\" onClick={() => callback('shape')}>\n                <FontAwesomeIcon icon={faShapes} className=\"light-icon\"/>\n            </div>\n            <div className=\"item\" onClick={() => callback('grid')}>\n                <FontAwesomeIcon icon={settings.gridMode ? faBorderAll : faBorderNone} className=\"light-icon\"/>\n            </div>\n            <div className=\"item\" onClick={() => callback('clean')}>\n                <FontAwesomeIcon icon={faHandSparkles} className=\"light-icon\"/>\n            </div>\n        </div>\n    )\n}\n\nexport default Toolbar","import React, { Component, useState, useEffect, useRef, useCallback } from 'react'\nimport Konva from 'konva'\nimport firebase, { auth, provider } from './firebase.js'\nimport Canvas from './Canvas'\nimport Toolbar from './Toolbar'\nimport './App.scss'\n\nconst App = () => {\n\n    const [settings, setSettings] = useState({\n        gridMode : false,\n        color: '#00F'\n    })\n    const containerRef = useRef()\n    const [stage, setStage] = useState(null)\n    const [currentItem, setCurrentItem] = useState('')\n    const [users, setUsers] = useState([])\n    const [user, setUser] = useState(null)\n\n    useEffect(() => {\n        auth.onAuthStateChanged((userObj) => {\n            if (userObj) {\n                setUser(userObj)\n\n                const usersRef = firebase.database().ref('users');\n                usersRef.on('value', (snapshot) => {\n                    let users = snapshot.val()\n                    let newState = []\n\n                    for (let userId in users) {\n                        let user = users[userId]\n                        let items = user.items\n                        for (let item in items) {\n                            newState.push({\n                                id: item,\n                                uid: userId,\n                                title: items[item].title,\n                                user: items[item].user\n                            })\n                        }\n                    }\n\n                    setUsers(newState)\n                })\n\n                setStage(new Konva.Stage({\n                    container: 'canvas',\n                    width: containerRef.current.clientWidth,\n                    height: containerRef.current.clientHeight\n                }))\n            } \n        })\n    }, [])\n\n    useEffect(() => {\n        if(!stage)\n            return\n\n        const itemsRef = firebase.database().ref(`canvas/test/items`)\n        itemsRef.get().then(snapshot => syncCanvas(snapshot.val()))\n        itemsRef.on('value', snapshot => syncCanvas(snapshot.val()))\n    },[stage])\n\n    const syncCanvas = (items) => {\n        let newObjects = []\n\n        var layer = new Konva.Layer()\n\n        for (let item in items) {\n            if(item){\n                newObjects.push({\n                    id: item,\n                    x: items[item].x,\n                    y: items[item].y\n                })\n\n                var circle = new Konva.Circle({\n                    x: items[item].x,\n                    y: items[item].y,\n                    radius: 70,\n                    fill: 'red',\n                    stroke: 'black',\n                    strokeWidth: 4\n                })\n                circle.draggable('true')\n                layer.add(circle)\n                circle.on('dragend', (e) => {\n                    let pos = e.target.getPosition()\n                    //console.log(e)\n                    console.log(`${item}: (${pos.x}, ${pos.y})`)\n                    const _itemsTable = firebase.database().ref(`canvas/test/items/${item}`)\n                    _itemsTable.update({\n                        x: pos.x,\n                        y: pos.y\n                    })\n                })\n            }\n        }\n\n        stage.off('click')\n        stage.on('click', (e) => {\n            console.log(e.evt)\n            if(e.evt.shiftKey)\n                return\n            const _itemsTable = firebase.database().ref(`canvas/test/items/`)\n            _itemsTable.push({\n                x: e.evt.layerX,\n                y: e.evt.layerY\n            })\n        })        \n\n        stage.destroyChildren()\n        stage.add(layer)\n        stage.draw()\n    }\n\n    useEffect(() => {\n        function handleResize() {\n            //console.log('resized to: ', window.innerWidth, 'x', window.innerHeight)\n            stage?.size({\n                width: containerRef.current.clientWidth,\n                height: containerRef.current.clientHeight\n            })\n        }\n    \n        window.addEventListener('resize', handleResize)\n    })\n\n    const removeItem = (itemId) => {\n        const itemRef = firebase.database().ref(`/users/${user.uid}/items/${itemId}`);\n        itemRef.remove();\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        \n        const itemsRef = firebase.database().ref(`/users/${this.state.user.uid}/items`);\n        const item = {\n            title: currentItem,\n            user: user.displayName || user.email\n        }\n        \n        itemsRef.push(item);\n        \n        setCurrentItem('')\n    }\n\n    const draw = ctx => {\n        if(!ctx)\n            return\n        ctx.fillStyle = '#0000f0'\n        ctx.beginPath()\n        ctx.arc(50, 50, 20, 0, 2*Math.PI)\n        ctx.fill()\n    }\n\n    const logout = () => {\n        auth.signOut().then(() => {\n            setUser(null)\n        })\n    }\n\n    const login = () => {\n        auth.signInWithPopup(provider).then((result) => {\n            const userRes = result.user\n            setUser(userRes)\n        })\n    }\n\n    const useToolbar = (state) => {\n        if(state === 'grid')\n            setSettings({ ...settings, gridMode: !settings.gridMode})\n\n        if(state === 'clean'){\n            const itemsTable = firebase.database().ref(`canvas/test/items`)\n            itemsTable.remove()\n        }\n    }\n\n    return (\n        <div className='app'>\n            <header>\n                <div className='wrapper'>\n                    <h1>CARTA</h1>\n                    <div className='user-profile'>\n                        {user ?\n                            <>\n                                <img src={user.photoURL} />\n                                <button onClick={logout}>Log Out</button>  \n                            </>              \n                        :\n                            <button onClick={login}>Log In</button>              \n                        }\n                    </div>\n                </div>\n            </header>\n            {user ?\n                <div>\n                    <div className='container' ref={containerRef}>\n                        {/* <Canvas user={user} settings={settings}/> */}\n                        <div id=\"canvas\"></div>\n                        <Toolbar callback={useToolbar} settings={settings}/>\n                    </div>\n                </div>\n            :\n                <div className='wrapper'>\n                    <p>You must be logged in to see your maps.</p>\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}