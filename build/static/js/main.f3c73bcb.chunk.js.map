{"version":3,"sources":["firebase.js","Canvas.js","Toolbar.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","provider","auth","GoogleAuthProvider","Canvas","canvasRef","useRef","useState","itemsTable","setItemsTable","canvas","setCanvas","context","setContext","bounds","setBounds","canvasPosition","setCanvasPosition","clickPosition","setClickPosition","paintColor","setEvent","closestObject","setClosestObject","dragging","setDragging","objects","setObjects","useEffect","crosshairs","addCanvasItem","a","x","y","item","push","refreshCanvas","clearRect","width","height","forEach","fillStyle","beginPath","arc","Math","PI","fill","drawCircle","distance","p1","p2","sqrt","setLineDash","strokeStyle","moveTo","lineTo","stroke","undefined","closest","object","orig_dist","highlightNearestObject","_itemsTable","database","ref","get","then","snapshot","items","val","newObjects","id","on","current","getContext","getBoundingClientRect","onMouseDown","event","onMouseUp","onMouseMove","newX","screenX","newY","screenY","find","_","Toolbar","className","icon","faTh","faHandSparkles","App","setItems","user","setUser","onAuthStateChanged","userObj","users","newState","userId","uid","title","src","photoURL","onClick","signOut","signInWithPopup","result","userRes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f3c73bcb.chunk.js","sourcesContent":["// src/firebase.js\nimport firebase from 'firebase'\nif(!firebase.apps.length)\n    firebase.initializeApp({\n        apiKey: \"AIzaSyA8S-srH-tHf8zNFjm-K8wExlaxY0xEn0Q\",\n        authDomain: \"carta-engine.firebaseapp.com\",\n        projectId: \"carta-engine\",\n        storageBucket: \"carta-engine.appspot.com\",\n        messagingSenderId: \"129718650492\",\n        appId: \"1:129718650492:web:6a0311a65b93ebbef36bf9\",\n        measurementId: \"G-T9VZHWB6KX\"\n    })\n\nexport const provider = new firebase.auth.GoogleAuthProvider()\nexport const auth = firebase.auth()\nexport default firebase","import React, { useState, useEffect, useRef } from 'react'\nimport firebase from './firebase.js'\n\nconst Canvas = ({ }) => {\n  \n    const canvasRef = useRef(null)\n    const [itemsTable, setItemsTable] = useState(null)\n    const [canvas, setCanvas] = useState(null)\n    const [context, setContext] = useState(null)\n    const [bounds, setBounds] = useState(null)\n    const [canvasPosition, setCanvasPosition] = useState(null)\n    const [clickPosition, setClickPosition] = useState(null)\n\n    const [paintColor, setPaintColor] = useState('#f00000')\n\n    const [event, setEvent] = useState(null)\n    const [closestObject, setClosestObject] = useState(null)\n    const [dragging, setDragging] = useState(false)\n    const [objects, setObjects] = useState([])\n\n    useEffect(() => {\n        if(context && objects)\n            crosshairs()\n    }, [clickPosition, objects])\n\n    const moveHandle = event => {\n        if(!canvasPosition)\n            return\n        \n        const newX = (event.screenX - canvasPosition.x) * (1920/bounds.width)\n        const newY = (event.screenY - canvasPosition.y) * (1024/bounds.height) - 120\n\n        if(dragging && closestObject){\n            let object = objects.find(_ => _.id = closestObject.id)\n            \n            object.x += (newX - clickPosition.x)\n            object.y += (newY - clickPosition.y)\n            setObjects([...objects])\n        }\n\n        setClickPosition({\n            'x': newX,\n            'y': newY,\n        })\n    }\n\n    //Append new item on backend\n    const addCanvasItem = async ({x, y}) => {\n        // `/canvas/<canvas_id>/items`\n        const item = {x, y}\n        itemsTable.push(item)\n\n        //setObjects([...objects, {x, y}])\n    }\n\n    const clickDownHandle = event => {\n        setEvent(event)\n\n        if(closestObject){\n            setDragging(true)\n        }else{\n            setDragging(false)\n        }\n        \n        crosshairs()\n    }\n\n    const clickUpHandle = event => {\n        setEvent(event)\n\n        if(!dragging)\n            addCanvasItem(clickPosition)\n\n        setDragging(false)\n        \n        crosshairs()\n    }\n\n    const drawCircle = (x, y) => {\n        context.fillStyle = paintColor\n\n        context.beginPath()\n        context.arc(x, y, 20, 0, 2*Math.PI)\n        context.fill()\n    }\n\n    const refreshCanvas = () => {\n        context.clearRect(0, 0, canvas.width, canvas.height)\n\n        if(objects)\n            objects.forEach(({x, y}) => drawCircle(x, y))\n    }\n\n    const distance = (p1, p2) => {\n        let x = p1.x - p2.x\n        let y = p1.y - p2.y\n        return Math.sqrt((x*x) + (y*y))\n    }\n\n    const highlightNearestObject = () => {\n        setClosestObject(undefined)\n\n        if(!objects)\n            return\n        \n        let closest = undefined\n\n        for(let object of objects){\n            if(!closest){\n                closest = object\n            }else{\n                \n\n                let orig_dist = distance(clickPosition, closest)\n                let new_dist = distance(clickPosition, object)\n                if(new_dist < orig_dist){\n                    closest = object\n                }\n            }\n        }\n\n        if(closest && distance(clickPosition, closest) < 20){\n            setClosestObject(closest)\n\n            context.fillStyle = '#0ff'\n\n            context.beginPath()\n            context.arc(closest.x, closest.y, 20, 0, 2*Math.PI)\n            context.fill()\n        }\n    }\n\n    const crosshairs = () => {\n        if(!clickPosition)\n            return\n        \n        refreshCanvas()\n\n        context.setLineDash([5, 2])\n        context.strokeStyle = '#ccc'\n\n        context.beginPath()\n        context.moveTo(clickPosition.x, 0)\n        context.lineTo(clickPosition.x, canvas.height)\n        context.stroke()\n\n        context.beginPath()\n        context.moveTo(0, clickPosition.y)\n        context.lineTo(canvas.width, clickPosition.y)\n        context.stroke()\n\n        if(!dragging)\n            highlightNearestObject()   \n    }\n\n    useEffect(() => {\n        const _itemsTable = firebase.database().ref(`test`)\n        _itemsTable.get().then(snapshot => {\n            let items = snapshot.val()\n            let newObjects = []\n\n            for (let item in items) {\n                if(item)\n                    newObjects.push({\n                        id: item,\n                        x: items[item].x,\n                        y: items[item].y\n                    })\n            }\n\n            setObjects(newObjects)\n        })\n\n        _itemsTable.on('value', (snapshot) => {\n            let items = snapshot.val()\n            let newObjects = []\n\n            for (let item in items) {\n                if(item)\n                    newObjects.push({\n                        id: item,\n                        x: items[item].x,\n                        y: items[item].y\n                    })\n            }\n\n            setObjects(newObjects)\n        })\n        setItemsTable(_itemsTable)\n\n        const canvas = canvasRef.current\n        setCanvas(canvas)\n        \n        const context = canvas.getContext('2d')\n        setContext(context)\n\n        let bounds = canvasRef.current.getBoundingClientRect()\n        setBounds(bounds)\n        setCanvasPosition({\n            'x': bounds.x,\n            'y': bounds.y,\n        })\n    }, [])\n  \n    return <canvas onMouseDown={clickDownHandle} onMouseUp={clickUpHandle} onMouseMove={moveHandle} ref={canvasRef} width=\"1920\" height=\"1024\"/>\n}\n\nexport default Canvas","import React, { useState, useEffect, useRef } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTh, faHandSparkles } from '@fortawesome/free-solid-svg-icons'\nimport './Toolbar.css'\n\nconst Toolbar = ({ }) => {\n    return (\n        <div id=\"toolbar\">\n            <div className=\"item\">\n                <FontAwesomeIcon icon={faTh} className=\"light-icon\"/>\n            </div>\n            <div className=\"item\">\n                <FontAwesomeIcon icon={faHandSparkles} className=\"light-icon\"/>\n            </div>\n        </div>\n    )\n}\n\nexport default Toolbar","import React, { Component, useState, useEffect, useRef, useCallback } from 'react'\nimport firebase, { auth, provider } from './firebase.js'\nimport Canvas from './Canvas'\nimport Toolbar from './Toolbar'\nimport './App.css'\n\nconst App = () => {\n\n    const [currentItem, setCurrentItem] = useState('')\n    const [items, setItems] = useState([])\n    const [user, setUser] = useState(null)\n\n    const listenToItemsCollection = () => {\n        const itemsRef = firebase.database().ref('users');\n        itemsRef.on('value', (snapshot) => {\n            let users = snapshot.val()\n            let newState = []\n\n            for (let userId in users) {\n                let user = users[userId]\n                let items = user.items\n                for (let item in items) {\n                    newState.push({\n                        id: item,\n                        uid: userId,\n                        title: items[item].title,\n                        user: items[item].user\n                    })\n                }\n            }\n\n            setItems(newState)\n        })\n    }\n\n    useEffect(() => {\n        auth.onAuthStateChanged((userObj) => {\n            if (userObj) {\n                setUser(userObj)\n                listenToItemsCollection()\n            } \n        })\n    }, [])\n\n    const removeItem = (itemId) => {\n        const itemRef = firebase.database().ref(`/users/${this.state.user.uid}/items/${itemId}`);\n        itemRef.remove();\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        \n        const itemsRef = firebase.database().ref(`/users/${this.state.user.uid}/items`);\n        const item = {\n            title: currentItem,\n            user: user.displayName || user.email\n        }\n        \n        itemsRef.push(item);\n        \n        setCurrentItem('')\n    }\n\n    const draw = ctx => {\n        if(!ctx)\n            return\n        ctx.fillStyle = '#0000f0'\n        ctx.beginPath()\n        ctx.arc(50, 50, 20, 0, 2*Math.PI)\n        ctx.fill()\n    }\n\n    const logout = () => {\n        auth.signOut().then(() => {\n            setUser(null)\n            setItems(items)\n        })\n    }\n\n    const login = () => {\n        auth.signInWithPopup(provider).then((result) => {\n            const userRes = result.user\n            setUser(userRes)\n        })\n    }\n\n    return (\n        <div className='app'>\n            <header>\n                <div className='wrapper'>\n                    <h1>CARTA</h1>\n                    <div className='user-profile'>\n                        {user ?\n                            <>\n                                <img src={user.photoURL} />\n                                <button onClick={logout}>Log Out</button>  \n                            </>              \n                        :\n                            <button onClick={login}>Log In</button>              \n                        }\n                    </div>\n                </div>\n            </header>\n            {user ?\n                <div>\n                    <div className='container'>\n                        <Canvas/>\n                        <Toolbar/>\n                    </div>\n                </div>\n            :\n                <div className='wrapper'>\n                    <p>You must be logged in to see your maps.</p>\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}